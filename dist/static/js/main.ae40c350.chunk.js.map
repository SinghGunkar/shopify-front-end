{"version":3,"sources":["redux/reducers/authReducer.js","redux/reducers/testCasesReducer.js","redux/reducers/rootReducer.js","config/firebaseConfig.js","redux/store.js","components/header/Header.js","redux/actions.js/authActions.js","components/menu-item/MenuItem.js","components/directory/Directory.js","pages/homepage/HomePage.js","components/button/Button.js","components/form-input/FormInput.js","components/sign-in/SignIn.js","components/sign-up/SignUp.js","pages/signin-signup/SignInSignUpPage.js","components/instructions.js/Instructions.js","apis/inputValidationAPI.js","components/test-challenges-form/TestChallengesForm.js","redux/actions.js/testCaseActions.js","components/testCasesFound/TestCasesFound.js","pages/challengepage/ChallengePage.js","App.js","index.js"],"names":["initialState","signInError","signUpError","authReducer","state","action","type","console","log","payload","message","instructions","validationResults","fetchingState","testCasesReducer","rootReducer","combineReducers","auth","testCases","firestore","firestoreReducer","firebase","firebaseReducer","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","userProfile","useFirestoreForProfile","initializeApp","settings","timestampsInSnapshot","merge","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","withExtraArgument","getFirestore","getFirebase","reduxFirestore","connect","isUserSignedIn","isEmpty","isAuthStateLoaded","isLoaded","dispatch","logOut","getState","logout","then","response","catch","err","className","to","onClick","MenuItem","title","imageUrl","imageAlt","subTitle","src","alt","toUpperCase","Directory","homePageDisplayData","history","useHistory","push","HomePage","Button","children","isGoogleSignIn","otherProps","FormInput","handleChange","label","conditionalShrinkClassName","value","length","onChange","signIn","credentials","email","password","signInWithEmailAndPassword","signInWithGoogle","login","provider","useState","setState","event","target","name","prevState","onSubmit","preventDefault","required","signUpUser","userSignUpData","createUserWithEmailAndPassword","collection","doc","user","uid","set","FoundTestCases","confirmPassword","e","Instructions","inputValidationAPI","axios","create","baseURL","headers","fetchingStatus","fetchValidationResults","userInput","fireStore","currentUserTestCases","profile","map","object","testCase","currentUserTestCasesWithTimeStamps","post","term","data","validatonResults","newResults","filter","item","includes","foundTestCaseTime","Date","toUTCString","dataToStore","timeFound","concat","update","setAPIRequestStatusToFetching","setUserInput","TestCasesFound","useSelector","useFirestoreConnect","foundTestCases","users","numberTestCasesFound","result","idk","isUserHasPropertyCreatedAt","App","currentUser","undefined","exact","path","component","SignInSignUpPage","ChallengePage","rootElement","document","getElementById","rrfProps","config","createFirestoreInstance","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ae40c350.chunk.js","sourcesContent":["const initialState = { signInError: null, signUpError: null }\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"LOGIN_ERROR\":\n            console.log(\"Login error\")\n            return {\n                ...state,\n                signInError: \"Login failed\"\n            }\n        case \"LOGIN_SUCCESS\":\n            console.log(\"Login success\")\n            return {\n                ...state,\n                signInError: null\n            }\n        case \"SIGNOUT_SUCCESS\":\n            console.log(\"Logout success\")\n            return state\n        case \"SIGNUP_SUCCESS\":\n            console.log(\"Sign up success\")\n            return {\n                ...state,\n                signUpError: null\n            }\n        case \"SIGNUP_ERROR\":\n            console.log(\"Sign up error\")\n            return {\n                ...state,\n                signUpError: action.payload.message\n            }\n        case \"GOOGLE_SIGN_IN_SUCCESS\":\n            console.log(\"Google sign in success\")\n            return {\n                ...state,\n                signUpError: null\n            }\n        default:\n            return state\n    }\n}\n\nexport default authReducer\n","const initialState = {\n    instructions: \"Instructions go here\",\n    validationResults: [],\n    fetchingState: \"idle\"\n}\n\nconst testCasesReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"VALIDATE_TESTCASE\":\n            return { ...state, validationResults: action.payload }\n        case \"VALIDATE_TESTCASE_ERROR\":\n            console.log(\"Error validating the following input\" + action.payload)\n            return { ...state, fetchingState: \"idle\" }\n        case \"VALIDATE_TESTCASE_SUCCESS\":\n            console.log(\"Validation was success\")\n            return { ...state, fetchingState: \"idle\" }\n        case \"START_FETCHING_VALIDATION_RESULTS\":\n            console.log(\"Fetching validation results\")\n            return { ...state, fetchingState: action.payload }\n        default:\n            return state\n    }\n}\n\nexport default testCasesReducer\n","import { combineReducers } from \"redux\"\nimport authReducer from \"./authReducer\"\nimport testCasesReducer from \"./testCasesReducer\"\nimport { firestoreReducer } from \"redux-firestore\"\nimport { firebaseReducer } from \"react-redux-firebase\"\n\nexport const rootReducer = combineReducers({\n    auth: authReducer,\n    testCases: testCasesReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n})\n","import firebase from \"firebase/compat/app\"\nimport \"firebase/compat/auth\"\nimport \"firebase/compat/firestore\"\n\nexport const firebaseConfig = {\n    apiKey: \"AIzaSyAm7U-U8QgfancoCHLrEh1MAUhTlpo8B0g\", // This is an identification key and is safe to expose to the public\n    authDomain: \"test-challenges-firebase.firebaseapp.com\",\n    projectId: \"test-challenges-firebase\",\n    storageBucket: \"test-challenges-firebase.appspot.com\",\n    messagingSenderId: \"17043746175\",\n    appId: \"1:17043746175:web:56361401f640c6e2a43e4a\",\n    measurementId: \"G-KQR8C7DSQH\",\n    userProfile: \"users\", // unsure if this line is needed\n    useFirestoreForProfile: true // unsure if this line is needed\n}\n\nfirebase.initializeApp(firebaseConfig)\nfirebase.firestore().settings({ timestampsInSnapshot: true, merge: true })\n\nexport default firebase\n","import { createStore, applyMiddleware, compose } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport { getFirestore, reduxFirestore } from \"redux-firestore\"\nimport { getFirebase } from \"react-redux-firebase\"\nimport { rootReducer } from \"./reducers/rootReducer\"\nimport { firebaseConfig } from \"../config/firebaseConfig\"\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk.withExtraArgument({ getFirestore, getFirebase })),\n        reduxFirestore(firebaseConfig)\n    )\n)\n","import React from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\nimport { compose } from \"redux\"\nimport { signOut } from \"../../redux/actions.js/authActions\"\nimport \"./headerStyles.scss\"\n\nconst Header = ({ isUserSignedIn, logOut, isAuthStateLoaded }) => {\n    return (\n        <div className=\"header\">\n            <Link className=\"logo-wrapper\" to=\"/\">\n                HOME\n            </Link>\n\n            <div className=\"navigation-links-wrapper\">\n                <div>\n                    {isUserSignedIn && isAuthStateLoaded ? (\n                        <Link className=\"link\" to=\"/challenge\">\n                            CHALLENGE\n                        </Link>\n                    ) : (\n                        \"\"\n                    )}\n                </div>\n\n                <div>\n                    {isUserSignedIn && isAuthStateLoaded ? (\n                        <Link className=\"link\" to=\"/\" onClick={logOut}>\n                            SIGNOUT\n                        </Link>\n                    ) : (\n                        <Link className=\"link\" to=\"/signinsignup\">\n                            SIGNIN\n                        </Link>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isUserSignedIn: !state.firebase.auth.isEmpty,\n        isAuthStateLoaded: state.firebase.auth.isLoaded\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logOut: () => dispatch(signOut())\n    }\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(Header)\n","export const signUpUser = payload => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firestore = getFirestore()\n        const firebase = getFirebase()\n\n        /* \n        Note: confirm password functionality is not implemented, use:\n        `const { name, email, password, confirmPassword } = payload`\n        to destrucutre paramters of the payload \n        */\n\n        const { name, email, password } = payload\n\n        firebase\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .then(response => {\n                return firestore.collection(\"users\").doc(response.user.uid).set({\n                    name,\n                    email,\n                    FoundTestCases: []\n                })\n            })\n            .then(() => {\n                dispatch({ type: \"SIGNUP_SUCCESS\" })\n            })\n            .catch(err => {\n                dispatch({ type: \"SIGNUP_ERROR\", payload: err })\n            })\n    }\n}\n\nexport const signIn = payload => {\n    const { email, password } = payload\n\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase()\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .then(() => {\n                dispatch({ type: \"LOGIN_SUCCESS\" })\n            })\n            .catch(err => {\n                dispatch({ type: \"LOGIN_ERROR\", payload: err })\n            })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase()\n\n        firebase\n            .logout()\n            .then(response => {\n                dispatch({ type: \"SIGNOUT_SUCCESS\" })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n}\n\nexport const signInWithGoogle = () => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase()\n        firebase\n            .login({\n                provider: \"google\",\n                type: \"popup\"\n            })\n            .then(response => {\n                return dispatch({\n                    type: \"GOOGLE_SIGN_IN_SUCCESS\"\n                })\n            })\n            .catch(err => {\n                dispatch({ type: \"LOGIN_ERROR\", payload: err })\n            })\n    }\n}\n","import React from \"react\"\n\nimport \"./menuItemStyles.scss\"\n\nconst MenuItem = ({ title, imageUrl, imageAlt, subTitle }) => {\n    return (\n        <div className={`menu-item`}>\n            <div className=\"background-image\">\n                <img src={imageUrl} alt={imageAlt} />\n            </div>\n\n            <div className=\"content\">\n                <div>\n                    <h1 className=\"title\">{title.toUpperCase()}</h1>\n                </div>\n                <div>\n                    <h1 className=\"subtitle\">{subTitle.toUpperCase()}</h1>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default MenuItem\n","import React from \"react\"\nimport { useHistory } from \"react-router-dom\"\nimport MenuItem from \"../menu-item/MenuItem\"\n\nimport \"./directoryStyles.scss\"\n\nconst Directory = () => {\n    const homePageDisplayData = {\n        id: 1,\n        title: \"Neo QA\",\n        subTitle: \"Testing Challenge\",\n        imageUrl:\n            \"https://images.pexels.com/photos/3137079/pexels-photo-3137079.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\",\n\n        imageAlt: \"blackBackground\"\n    }\n\n    const history = useHistory()\n    const handleClick = () => {\n        history.push(\"/challenge\")\n    }\n\n    return (\n        <div className=\"directory-comp\" onClick={handleClick}>\n            <MenuItem\n                key={homePageDisplayData.id}\n                title={homePageDisplayData.title}\n                subTitle={homePageDisplayData.subTitle}\n                imageUrl={homePageDisplayData.imageUrl}\n                imageAlt={homePageDisplayData.imageAlt}\n            />\n        </div>\n    )\n}\n\nexport default Directory\n","import React from \"react\"\n\nimport \"./homepageStyles.scss\"\n\nimport Directory from \"../../components/directory/Directory\"\n\nconst HomePage = () => {\n    return (\n        <div className=\"homepage\">\n            <Directory />\n        </div>\n    )\n}\n\nexport default HomePage\n","import React from \"react\"\n\nimport \"./buttonStyles.scss\"\n\nconst Button = ({ children, isGoogleSignIn, ...otherProps }) => {\n    return (\n        <button\n            className={`${\n                isGoogleSignIn ? \"google-sign-in\" : \"\"\n            } button`}\n            {...otherProps}\n        >\n            {children}\n        </button>\n    )\n}\n\nexport default Button\n","import React from \"react\"\n\nimport \"./formInputStyles.scss\"\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => {\n    const conditionalShrinkClassName = otherProps.value.length\n        ? \"shrink\"\n        : \"\"\n\n    return (\n        <div className=\"group\">\n            <input\n                className=\"form-input\"\n                onChange={handleChange}\n                {...otherProps}\n            />\n\n            {label ? (\n                <label\n                    className={`${conditionalShrinkClassName} form-input-label`}\n                >\n                    {label}\n                </label>\n            ) : null}\n        </div>\n    )\n}\n\nexport default FormInput\n","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport { signIn, signInWithGoogle } from \"../../redux/actions.js/authActions\"\nimport \"./signInStyles.scss\"\nimport Button from \"../button/Button\"\nimport FormInput from \"../form-input/FormInput\"\n\nconst SignIn = ({ signIn, signInError, signInWithGoogle }) => {\n    const [state, setState] = useState({\n        email: \"\",\n        password: \"\"\n    })\n\n    const handleSubmit = event => {\n        event.preventDefault()\n        signIn(state)\n        setState({ email: \"\", password: \"\" })\n    }\n\n    const handleChange = event => {\n        const { value, name } = event.target\n        setState(prevState => ({ ...prevState, [name]: value }))\n    }\n\n    return (\n        <div className=\"sign-in-container\">\n            <span className=\"sign-in-title\">Work at Neo?</span>\n            <span className=\"sign-in-sub-title\">\n                Sign in with your Neo Google account using the blue button\n            </span>\n\n            <form className=\"sign-in-form\" onSubmit={handleSubmit}>\n                <FormInput\n                    name=\"email\"\n                    type=\"email\"\n                    handleChange={handleChange}\n                    value={state.email || \"\"}\n                    label=\"email\"\n                    required\n                />\n                <FormInput\n                    name=\"password\"\n                    type=\"password\"\n                    handleChange={handleChange}\n                    value={state.password || \"\"}\n                    label=\"password\"\n                    required\n                />\n\n                <Button type=\"submit\"> Sign in </Button>\n                <Button onClick={signInWithGoogle} isGoogleSignIn={true}>\n                    Sign in with Google\n                </Button>\n\n                <h5 className=\"sign-in-error\">\n                    {signInError ? `${signInError}` : \"\"}\n                </h5>\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        signInError: state.auth.signInError\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        signIn: credentials => dispatch(signIn(credentials)),\n        signInWithGoogle: () => dispatch(signInWithGoogle())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport Button from \"../button/Button\"\nimport FormInput from \"../form-input/FormInput\"\nimport { signUpUser } from \"../../redux/actions.js/authActions\"\n\nimport \"./signUpStyles.scss\"\n\nconst SignUp = ({ signUpUser, signUpError }) => {\n    const [state, setState] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n    })\n\n    const handleSubmit = event => {\n        event.preventDefault()\n        signUpUser(state)\n        setState({ name: \"\", email: \"\", password: \"\", confirmPassword: \"\" })\n    }\n\n    const handleChange = event => {\n        const { value, name } = event.target\n        setState(prevState => ({ ...prevState, [name]: value }))\n    }\n\n    return (\n        <div className=\"sign-up-container\">\n            <span className=\"sign-up-title\">Sign up</span>\n            <span className=\"sign-up-sub-title\">\n                Note: Sign up is currently disabled\n            </span>\n\n            <form\n                className=\"sign-up-form\"\n                onSubmit={() => {\n                    console.log(\"Sign up disabled\")\n                }}\n            >\n                <FormInput\n                    name=\"name\"\n                    type=\"name\"\n                    handleChange={e => handleChange(e)}\n                    value={state.name || \"\"}\n                    label=\"name\"\n                    required\n                />\n\n                <FormInput\n                    name=\"email\"\n                    type=\"email\"\n                    handleChange={e => handleChange(e)}\n                    value={state.email || \"\"}\n                    label=\"email\"\n                    required\n                />\n                <FormInput\n                    name=\"password\"\n                    type=\"password\"\n                    handleChange={e => handleChange(e)}\n                    value={state.password || \"\"}\n                    label=\"password\"\n                    required\n                />\n\n                <FormInput\n                    name=\"confirmPassword\"\n                    type=\"password\"\n                    handleChange={e => handleChange(e)}\n                    value={state.confirmPassword || \"\"}\n                    label=\"confirm password\"\n                    required\n                />\n\n                <Button type=\"submit\"> Sign Up </Button>\n                <br />\n                <h5 className=\"sign-up-error\">\n                    {signUpError ? `${signUpError}` : \"\"}\n                </h5>\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        signUpError: state.auth.signUpError\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        signUpUser: userSignUpData => dispatch(signUpUser(userSignUpData))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React from \"react\"\nimport { connect } from \"react-redux\"\nimport SignIn from \"../../components/sign-in/SignIn\"\nimport SignUp from \"../../components/sign-up/SignUp\"\nimport { Redirect } from \"react-router-dom\"\nimport \"./signInSignUpStyles.scss\"\n\nconst SignInSignUpPage = ({ isUserSignedIn }) => {\n    if (isUserSignedIn) return <Redirect to=\"/challenge\" />\n\n    return (\n        <div className=\"sign-in-sign-up-container\">\n            <SignIn />\n            <SignUp />\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isUserSignedIn: !state.firebase.auth.isEmpty\n    }\n}\n\nexport default connect(mapStateToProps)(SignInSignUpPage)\n","import React from \"react\"\nimport \"./instructionsStyles.scss\"\n\nconst Instructions = () => {\n    return (\n        <div className=\"instructions-container\">\n            <h3>Instructions</h3>\n            <li>Perform input (text) validation using the text field</li>\n            <li>Here are some contraints:</li>\n            <li>Maximum length: 20</li>\n            <li>Minimum length: 10</li>\n            <li>Using the constraints above, can you find all of the test cases?</li>\n        </div>\n    )\n}\n\nexport default Instructions\n","import axios from \"axios\"\n\nlet apiString = \"https://testing-website-v3-backend.herokuapp.com/\"\n\nconst inputValidationAPI = axios.create({\n    baseURL: apiString,\n    headers: {\n        \"Content-Type\": \"application/json\"\n    }\n})\n\nexport default inputValidationAPI\n","import React, { useState } from \"react\"\nimport { connect } from \"react-redux\"\nimport \"./testChallengesForm.scss\"\nimport { validateTestCase } from \"../../redux/actions.js/testCaseActions\"\nimport FormInput from \"../form-input/FormInput\"\nimport Button from \"../button/Button\"\nimport { setIsFetchingState } from \"../../redux/actions.js/testCaseActions\"\n\nconst TestChallengesForm = ({\n    fetchValidationResults,\n    fetchingStatus,\n    setAPIRequestStatusToFetching\n}) => {\n    const [userInput, setUserInput] = useState(\"\")\n\n    const handleChange = e => {\n        setUserInput(e.target.value)\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        setAPIRequestStatusToFetching()\n        fetchValidationResults(userInput)\n        setUserInput(\"\")\n    }\n\n    return (\n        <div className=\"test-challenges-form-container\">\n            <h3 className=\"title\">Enter Input below</h3>\n\n            <form className=\"test-challenges-form\">\n                <FormInput\n                    name=\"userInput\"\n                    type=\"text\"\n                    handleChange={e => handleChange(e)}\n                    value={userInput || \"\"}\n                    label=\"Text\"\n                    required\n                />\n\n                {fetchingStatus === \"fetching\" ? (\n                    <h3 className=\"loading-text\">Loading</h3>\n                ) : (\n                    <Button\n                        onClick={handleSubmit}\n                        isGoogleSignIn={false}\n                        type=\"submit\"\n                    >\n                        Submit\n                    </Button>\n                )}\n            </form>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        fetchingStatus: state.testCases.fetchingState\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchValidationResults: userInput => dispatch(validateTestCase(userInput)),\n        setAPIRequestStatusToFetching: () => dispatch(setIsFetchingState())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TestChallengesForm)\n","import inputValidationAPI from \"../../apis/inputValidationAPI\"\n\n/* \n    Note: the code is this file is a messy. Suggested course of action to clean up the code below\n    - refactor the code logic below into seperate actions and reducers\n    - transfer client side logic over to firebase cloud functions, caveat: this will increase costs\n*/\n\nexport const validateTestCase = payload => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const fireStore = getFirestore()\n        const state = getState()\n        const uid = state.firebase.auth.uid\n        let currentUserTestCases = state.firebase.profile.FoundTestCases?.map(\n            object => object.testCase\n        )\n\n        if (!currentUserTestCases) {\n            currentUserTestCases = []\n        }\n\n        let currentUserTestCasesWithTimeStamps =\n            state.firebase.profile?.FoundTestCases\n\n        if (!currentUserTestCasesWithTimeStamps) {\n            currentUserTestCasesWithTimeStamps = []\n        }\n\n        inputValidationAPI\n            .post(\"/submitTerm\", {\n                term: payload\n            })\n            .then(response => {\n                return response.data.data\n            })\n            .then(validatonResults => {\n                const newResults = validatonResults.filter(\n                    item => !currentUserTestCases.includes(item)\n                )\n\n                const isFoundNewTestCases = newResults.length > 0\n\n                if (isFoundNewTestCases) {\n                    let foundTestCaseTime = new Date()\n                    foundTestCaseTime = foundTestCaseTime.toUTCString()\n\n                    const foundTestCasesWithTimeStamps = newResults\n\n                    const dataToStore = foundTestCasesWithTimeStamps\n                        .map(testCase => ({\n                            testCase,\n                            timeFound: foundTestCaseTime\n                        }))\n                        .concat(currentUserTestCasesWithTimeStamps)\n\n                    fireStore.update(\n                        { collection: \"users\", doc: uid },\n                        {\n                            FoundTestCases: dataToStore\n                        }\n                    )\n                }\n\n                return validatonResults\n            })\n            .then(validatonResults => {\n                dispatch({\n                    type: \"VALIDATE_TESTCASE_SUCCESS\",\n                    payload: validatonResults\n                })\n            })\n            .catch(err => console.log(err))\n    }\n}\n\nexport const setIsFetchingState = () => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        return dispatch({\n            type: \"START_FETCHING_VALIDATION_RESULTS\",\n            payload: \"fetching\"\n        })\n    }\n}\n","import React from \"react\"\nimport { useSelector } from \"react-redux\"\nimport { useFirestoreConnect, isLoaded, isEmpty } from \"react-redux-firebase\"\nimport \"./testCasesFoundStyles.scss\"\n\nconst TestCasesFound = () => {\n    const uid = useSelector(state => state.firebase.auth.uid)\n\n    useFirestoreConnect([{ collection: \"users\", doc: uid }])\n\n    const foundTestCases = useSelector(\n        ({ firestore: { data } }) => data.users && data.users[uid]?.FoundTestCases\n    )\n\n    const numberTestCasesFound = foundTestCases ? foundTestCases.length : 0\n\n    if (!foundTestCases) {\n        return <h3>You haven't found any test cases yet</h3>\n    }\n\n    if (!isLoaded(foundTestCases)) {\n        return <h3>Loading</h3>\n    }\n\n    if (isEmpty(foundTestCases)) {\n        return <h3>You haven't found any test cases yet</h3>\n    }\n\n    return (\n        <div className=\"found-test-cases-container\">\n            <h3>Test Cases Found: {`${numberTestCasesFound}/19`}</h3>\n\n            {foundTestCases.map((result, idk) => {\n                return <li key={idk}>{result.testCase}</li>\n            })}\n        </div>\n    )\n}\n\n// const mapStateToProps = state => {\n//     console.log(state)\n\n//     return {\n//         validationResults: state.testCases.validationResults,\n//         dataFromFireStore: state.firestore.data,\n//         uid: state.firebase.auth.uid\n//     }\n// }\n\nexport default TestCasesFound\n","import React from \"react\"\nimport \"./challengePageStyles.scss\"\nimport Instructions from \"../../components/instructions.js/Instructions\"\nimport TestChallengesForm from \"../../components/test-challenges-form/TestChallengesForm\"\nimport TestCasesFound from \"../../components/testCasesFound/TestCasesFound\"\nimport { connect } from \"react-redux\"\nimport { Redirect } from \"react-router-dom\"\n\nconst ChallengePage = ({ isUserSignedIn, isUserHasPropertyCreatedAt }) => {\n    if (!isUserSignedIn) return <Redirect to=\"/signinsignup\" />\n\n    return (\n        <div className=\"challenge-page-container\">\n            <div className=\"left-column\">\n                <Instructions />\n                <TestChallengesForm />\n            </div>\n\n            <div className=\"right-column\">\n                <TestCasesFound />\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        isUserSignedIn: !state.firebase.auth.isEmpty,\n        isUserHasPropertyCreatedAt: state.firebase\n    }\n}\n\nexport default connect(mapStateToProps)(ChallengePage)\n","import React from \"react\"\nimport { Switch, Route } from \"react-router-dom\"\n\nimport \"./App.css\"\n\nimport Header from \"./components/header/Header\"\nimport HomePage from \"./pages/homepage/HomePage\"\nimport SignInSignUpPage from \"./pages/signin-signup/SignInSignUpPage\"\nimport ChallengePage from \"./pages/challengepage/ChallengePage\"\n\nfunction App() {\n    return (\n        <div>\n            <Header currentUser={undefined} />\n            <Switch>\n                <Route exact path=\"/\" component={HomePage} />\n                <Route path=\"/signinsignup\" component={SignInSignUpPage} />\n                <Route path=\"/challenge\" component={ChallengePage} />\n            </Switch>\n        </div>\n    )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter } from \"react-router-dom\"\nimport { store } from \"./redux/store\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport { Provider } from \"react-redux\"\nimport firebase, { firebaseConfig } from \"./config/firebaseConfig\"\nimport { createFirestoreInstance } from \"redux-firestore\"\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\"\n\nconst rootElement = document.getElementById(\"root\")\n\n// app working\nconst rrfProps = {\n    firebase,\n    config: firebaseConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ReactReduxFirebaseProvider {...rrfProps}>\n                <BrowserRouter>\n                    <App />\n                </BrowserRouter>\n            </ReactReduxFirebaseProvider>\n        </Provider>\n    </React.StrictMode>,\n    rootElement\n)\n"],"sourceRoot":""}